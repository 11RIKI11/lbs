const express = require('express');
const { Pool } = require('pg');
const hirestime = require('hirestime');

'use strict';

// üîπ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã web-—Å–µ—Ä–≤–µ—Ä–∞
const server_host = 'localhost';
const server_port = '3000';

// üîπ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
const conn = {
    host: '127.0.0.1',
    user: 'postgres',
    password: '7676',
    database: 'uir5',
    port: 5432, // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç PostgreSQL
};

const test_id = 100;

// üîπ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
const queries = [
    { table: 'cities_no_part', sql: `SELECT * FROM cities_no_part LIMIT 1` },
    { table: 'cities_no_part', sql: `SELECT * FROM cities_no_part WHERE id = ${test_id} LIMIT 1` },
    { table: 'cities_part', sql: `SELECT * FROM cities_part LIMIT 1` },
    { table: 'cities_part', sql: `SELECT * FROM cities_part WHERE id = ${test_id} LIMIT 1` },
];

async function run() {
    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const pool = new Pool(conn);

    // –°–æ–∑–¥–∞–Ω–∏–µ web-—Å–µ—Ä–≤–µ—Ä–∞
    const app = express();

    // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ pug –∫–∞–∫ —à–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä–∞
    app.set('view engine', 'pug');

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    app.get('/', wrapAsync(async (req, res, next) => {
        // –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç—á–µ—Ç–∞)
        const { rows } = await pool.query(`SELECT COUNT(*) AS n FROM ${queries[0].table}`);
        const n = rows[0].n;

        // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤—ã–±–æ—Ä–æ–∫ –∏ –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        let results = [];
        for (let i in queries) {
            let time = hirestime();
            let { rows } = await pool.query(queries[i].sql);
            let elapsed = time(hirestime.MS).toFixed(2);

            results.push({
                n: n,
                sql: queries[i].sql,
                table: queries[i].table,
                time: elapsed,
            });
        }

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        res.render('results', { header: `Query results`, results: results });
    }));

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    app.listen(server_port, server_host, () => {
        console.log(`Server running at http://${server_host}:${server_port}/, press Ctrl-C to exit`);
    });
}

// üîπ –§—É–Ω–∫—Ü–∏—è-–æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö
function wrapAsync(fn) {
    return function(req, res, next) {
        fn(req, res, next).catch(next);
    };
}

// üîπ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
run();
